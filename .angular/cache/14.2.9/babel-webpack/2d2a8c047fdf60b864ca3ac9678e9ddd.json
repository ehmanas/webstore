{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/macspok/projects/idempiere-projects/webstore/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/macspok/projects/idempiere-projects/webstore/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/macspok/projects/idempiere-projects/webstore/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpParams } from '@angular/common/http';\nimport { HEADERS, Library } from '../library';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./local.storage.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../authentication/auth.service\";\nexport var CartService = /*#__PURE__*/(function () {\n  var CartService = /*#__PURE__*/function () {\n    function CartService(http, storageService, router, authService) {\n      _classCallCheck(this, CartService);\n\n      this.http = http;\n      this.storageService = storageService;\n      this.router = router;\n      this.authService = authService;\n      this.cart = [];\n      this.simpleCart = [];\n      this.cart = [];\n    }\n\n    _createClass(CartService, [{\n      key: \"addItem\",\n      value: function addItem(item) {\n        this.cart.push(item);\n        this.synchronize(item);\n        this.authService.showAlert({\n          type: 'success',\n          msg: 'Item added to cart'\n        });\n      }\n    }, {\n      key: \"synchronize\",\n      value: function synchronize(curItem) {\n        if (typeof this.simpleCart === 'undefined') {\n          this.simpleCart = [];\n        }\n\n        var updated = false;\n        this.simpleCart.forEach(function (item, index) {\n          if (item.id === curItem.id) {\n            item.qty = curItem.qty;\n            updated = true;\n          }\n        });\n\n        if (!updated) {\n          var sObj = {};\n          sObj.id = curItem.id;\n          sObj.qty = curItem.qty;\n          this.simpleCart.push(sObj);\n        }\n\n        this.storageService.save('cart', this.simpleCart);\n      }\n    }, {\n      key: \"deleteItem\",\n      value: function deleteItem(item) {\n        var index = this.cart.indexOf(item);\n        this.cart.splice(index, 1);\n        this.simpleCart.splice(index, 1);\n        this.storageService.save('cart', this.simpleCart);\n        this.authService.showAlert({\n          type: 'success',\n          msg: 'Item has been removed from shopping cart'\n        });\n      }\n    }, {\n      key: \"clearCart\",\n      value: function clearCart() {\n        this.cart = [];\n        this.storageService.save('cart', []);\n        this.simpleCart = [];\n      }\n    }, {\n      key: \"setCart\",\n      value: function setCart(cart) {\n        this.cart = cart;\n      }\n    }, {\n      key: \"getCart\",\n      value: function getCart() {\n        return this.cart;\n      }\n    }, {\n      key: \"getSimpleCart\",\n      value: function getSimpleCart() {\n        return this.simpleCart;\n      }\n    }, {\n      key: \"getCartFromStorage\",\n      value: function getCartFromStorage() {\n        this.simpleCart = this.storageService.get('cart');\n\n        if (this.simpleCart === null || this.simpleCart === undefined) {\n          this.storageService.save('cart', []);\n          this.simpleCart = this.storageService.get('cart');\n        }\n\n        var params = new HttpParams();\n\n        if (typeof this.simpleCart !== 'undefined') {\n          var _iterator = _createForOfIteratorHelper(this.simpleCart),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var item = _step.value;\n              params = params.append('id', item.id.toString());\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n\n        return this.http.get(Library.apiEndpoint + 'catalog/cart', {\n          params: params,\n          headers: HEADERS\n        });\n      }\n    }, {\n      key: \"getTotalPrice\",\n      value: function getTotalPrice() {\n        var totalPrice = this.cart.reduce(function (sum, cartItem) {\n          return sum += cartItem.price * cartItem.qty, sum;\n        }, 0);\n        return totalPrice;\n      }\n    }]);\n\n    return CartService;\n  }();\n\n  CartService.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LocalStorageService), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i4.AuthService));\n  };\n\n  CartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module"}