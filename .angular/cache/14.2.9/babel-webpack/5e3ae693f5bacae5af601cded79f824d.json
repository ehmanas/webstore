{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { HEADERS, Library } from '../library';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./local.storage.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../authentication/auth.service\";\nexport let CartService = /*#__PURE__*/(() => {\n  class CartService {\n    constructor(http, storageService, router, authService) {\n      this.http = http;\n      this.storageService = storageService;\n      this.router = router;\n      this.authService = authService;\n      this.cart = [];\n      this.simpleCart = [];\n      this.cart = [];\n    }\n\n    addItem(item) {\n      this.cart.push(item);\n      this.synchronize(item);\n      this.authService.showAlert({\n        type: 'success',\n        msg: 'Item added to cart'\n      });\n    }\n\n    synchronize(curItem) {\n      if (typeof this.simpleCart === 'undefined') {\n        this.simpleCart = [];\n      }\n\n      let updated = false;\n      this.simpleCart.forEach((item, index) => {\n        if (item.id === curItem.id) {\n          item.qty = curItem.qty;\n          updated = true;\n        }\n      });\n\n      if (!updated) {\n        const sObj = {};\n        sObj.id = curItem.id;\n        sObj.qty = curItem.qty;\n        this.simpleCart.push(sObj);\n      }\n\n      this.storageService.save('cart', this.simpleCart);\n    }\n\n    deleteItem(item) {\n      const index = this.cart.indexOf(item);\n      this.cart.splice(index, 1);\n      this.simpleCart.splice(index, 1);\n      this.storageService.save('cart', this.simpleCart);\n      this.authService.showAlert({\n        type: 'success',\n        msg: 'Item has been removed from shopping cart'\n      });\n    }\n\n    clearCart() {\n      this.cart = [];\n      this.storageService.save('cart', []);\n      this.simpleCart = [];\n    }\n\n    setCart(cart) {\n      this.cart = cart;\n    }\n\n    getCart() {\n      return this.cart;\n    }\n\n    getSimpleCart() {\n      return this.simpleCart;\n    }\n\n    getCartFromStorage() {\n      this.simpleCart = this.storageService.get('cart');\n\n      if (this.simpleCart === null || this.simpleCart === undefined) {\n        this.storageService.save('cart', []);\n        this.simpleCart = this.storageService.get('cart');\n      }\n\n      let params = new HttpParams();\n\n      if (typeof this.simpleCart !== 'undefined') {\n        for (const item of this.simpleCart) {\n          params = params.append('id', item.id.toString());\n        }\n      }\n\n      return this.http.get(Library.apiEndpoint + 'catalog/cart', {\n        params,\n        headers: HEADERS\n      });\n    }\n\n    getTotalPrice() {\n      const totalPrice = this.cart.reduce((sum, cartItem) => (sum += cartItem.price * cartItem.qty, sum), 0);\n      return totalPrice;\n    }\n\n  }\n\n  CartService.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LocalStorageService), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i4.AuthService));\n  };\n\n  CartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module"}