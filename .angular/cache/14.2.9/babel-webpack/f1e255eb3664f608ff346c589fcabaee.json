{"ast":null,"code":"import _classCallCheck from \"/Users/macspok/projects/idempiere-projects/webstore/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/macspok/projects/idempiere-projects/webstore/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../authentication/auth.service\";\nimport * as i3 from \"./cart.service\";\nimport * as i4 from \"./private.service\";\nexport var CheckoutService = /*#__PURE__*/(function () {\n  var CheckoutService = /*#__PURE__*/function () {\n    function CheckoutService(router, authService, cartService, privateService) {\n      _classCallCheck(this, CheckoutService);\n\n      this.router = router;\n      this.authService = authService;\n      this.cartService = cartService;\n      this.privateService = privateService;\n      this.shipAddress = {};\n      this.billAddress = {};\n      this.shipper = {};\n      this.order = {};\n      this.orderSource = new Subject();\n      this.order$ = this.orderSource.asObservable();\n    }\n\n    _createClass(CheckoutService, [{\n      key: \"payOrder\",\n      value: function payOrder(order) {\n        var _this = this;\n\n        this.privateService.getOrder(order.id).subscribe(function (ord) {\n          _this.cartService.clearCart();\n\n          ord.lines.forEach(function (item, index) {\n            _this.cartService.getCart().push(item);\n\n            _this.cartService.synchronize(item);\n          });\n          _this.order = ord;\n\n          _this.orderSource.next(ord);\n\n          _this.shipAddress = ord.shipAddress;\n          _this.billAddress = ord.billAddress;\n          _this.shipper = ord.shipper;\n\n          _this.router.navigate(['/checkout/checkout4']);\n        });\n      }\n    }, {\n      key: \"voidCurrentOrder\",\n      value: function voidCurrentOrder() {\n        this.privateService.voidOrder(this.order);\n        this.order = {};\n      }\n    }, {\n      key: \"voidOrder\",\n      value: function voidOrder(order) {\n        this.privateService.voidOrder(order).subscribe(function (resp) {\n          if (resp.status === 200) {\n            order.docStatus = 'VO';\n          }\n        });\n      }\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        this.order = {};\n        this.shipAddress = {};\n        this.billAddress = {};\n        this.shipper = {};\n      }\n    }, {\n      key: \"setShipAddress\",\n      value: function setShipAddress(address) {\n        this.shipAddress = address;\n      }\n    }, {\n      key: \"setBillAddress\",\n      value: function setBillAddress(address) {\n        this.billAddress = address;\n      }\n    }, {\n      key: \"setShipper\",\n      value: function setShipper(shipper) {\n        this.shipper = shipper;\n      }\n    }, {\n      key: \"getTotalPrice\",\n      value: function getTotalPrice() {\n        if (this.order.id) {\n          return this.order.grandTotal;\n        }\n\n        var price = this.cartService.getTotalPrice();\n\n        if (this.shipper.id) {\n          price = price + this.shipper.price;\n        }\n\n        return price;\n      }\n    }, {\n      key: \"createOrder\",\n      value: function createOrder() {\n        var _this2 = this;\n\n        this.order = {};\n        this.order.shipAddress = this.shipAddress;\n        this.order.billAddress = this.billAddress;\n        this.order.shipper = this.shipper;\n        this.order.lines = this.cartService.getCart();\n        /*\n        this.privateService.getOrder(1000000).subscribe(\n         (order : Order) => {\n         this.order = order;\n         console.log('HERE: '+order)\n         this.orderSource.next(order);\n         this.authService.showAlert({type: 'success', msg: 'Order '+order.documentNo+' is generated'});\n        });\n        */\n\n        this.privateService.createOrder(this.order).subscribe(function (order) {\n          _this2.order = order;\n\n          _this2.orderSource.next(order);\n\n          _this2.authService.showAlert({\n            type: 'success',\n            msg: 'Order ' + order.documentNo + ' is generated'\n          });\n        });\n      }\n    }]);\n\n    return CheckoutService;\n  }();\n\n  CheckoutService.ɵfac = function CheckoutService_Factory(t) {\n    return new (t || CheckoutService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(i3.CartService), i0.ɵɵinject(i4.PrivateService));\n  };\n\n  CheckoutService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CheckoutService,\n    factory: CheckoutService.ɵfac,\n    providedIn: 'root'\n  });\n  return CheckoutService;\n})();","map":null,"metadata":{},"sourceType":"module"}