{"ast":null,"code":"import _classCallCheck from \"/Users/macspok/projects/idempiere-projects/webstore/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/macspok/projects/idempiere-projects/webstore/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HEADERS, Library, OPTIONS } from '../library';\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var PrivateService = /*#__PURE__*/(function () {\n  var PrivateService = /*#__PURE__*/function () {\n    function PrivateService(http) {\n      _classCallCheck(this, PrivateService);\n\n      this.http = http;\n      this.addresses = [];\n    }\n\n    _createClass(PrivateService, [{\n      key: \"getOrders\",\n      value: function getOrders() {\n        return this.http.get(Library.apiEndpoint + 'account/orders', OPTIONS);\n      }\n    }, {\n      key: \"getOrder\",\n      value: function getOrder(id) {\n        return this.http.get(Library.apiEndpoint + 'account/order/' + id, OPTIONS);\n      }\n    }, {\n      key: \"createOrder\",\n      value: function createOrder(order) {\n        return this.http.post(Library.apiEndpoint + 'checkout/order/create', order, OPTIONS);\n      }\n    }, {\n      key: \"voidOrder\",\n      value: function voidOrder(order) {\n        return this.http.post(Library.apiEndpoint + 'checkout/order/void', order, {\n          headers: HEADERS,\n          observe: 'response'\n        });\n      }\n    }, {\n      key: \"getAccount\",\n      value: function getAccount() {\n        return this.http.get(Library.apiEndpoint + 'account/info', OPTIONS);\n      }\n    }, {\n      key: \"payment\",\n      value: function payment(type, orderId) {\n        return this.http.post(Library.apiEndpoint + 'checkout/payment', {\n          type: type,\n          orderId: orderId\n        }, {\n          observe: 'response'\n        });\n      }\n    }, {\n      key: \"updateAccount\",\n      value: function updateAccount(account) {\n        return this.http.post(Library.apiEndpoint + 'account/info/update', account, OPTIONS);\n      }\n    }, {\n      key: \"changePassword\",\n      value: function changePassword(passwordForm) {\n        return this.http.post(Library.apiEndpoint + 'account/password/change', passwordForm, OPTIONS);\n      }\n    }, {\n      key: \"getAddresses\",\n      value: function getAddresses() {\n        var _this = this;\n\n        return new Observable(function (observer) {\n          _this.http.get(Library.apiEndpoint + 'account/addresses', OPTIONS).subscribe(function (data) {\n            _this.addresses = data;\n            observer.next(_this.addresses);\n            observer.complete();\n          });\n        });\n      }\n    }, {\n      key: \"getAddress\",\n      value: function getAddress(id) {\n        if (this.addresses) {\n          return this.addresses.filter(function (h) {\n            return h.id === +id;\n          })[0];\n        } else {\n          return {};\n        }\n      }\n    }, {\n      key: \"createUpdateAddress\",\n      value: function createUpdateAddress(address) {\n        return this.http.post(Library.apiEndpoint + 'account/address/create_update', address, OPTIONS);\n      }\n    }, {\n      key: \"deleteAddress\",\n      value: function deleteAddress(address) {\n        return this.http.delete(Library.apiEndpoint + 'account/address/delete/' + address.id, {\n          headers: HEADERS,\n          observe: 'response'\n        });\n      }\n    }, {\n      key: \"getPdfFile\",\n      value: function getPdfFile(id, type) {\n        return this.http.get(Library.apiEndpoint + 'account/pdf/' + type + '/' + id, {\n          headers: HEADERS,\n          responseType: 'blob' // observe: 'response'\n\n        });\n      }\n    }]);\n\n    return PrivateService;\n  }();\n\n  PrivateService.ɵfac = function PrivateService_Factory(t) {\n    return new (t || PrivateService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  PrivateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PrivateService,\n    factory: PrivateService.ɵfac,\n    providedIn: 'root'\n  });\n  return PrivateService;\n})();","map":null,"metadata":{},"sourceType":"module"}