{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { PLATFORM_ID } from '@angular/core';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoreModule } from './core/core.module';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { LocalStorageService } from './core/services/local.storage.service';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { SharedModule } from './shared/shared.module';\nimport { Library } from './core/library';\nimport { isPlatformBrowser } from '@angular/common';\nimport { TokenInterceptor } from './core/interceptors/token.interceptor';\nimport { HttpErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { JWT_OPTIONS, JwtModule } from '@auth0/angular-jwt';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./core/core.module\";\nimport * as i2 from \"ngx-bootstrap/collapse\";\nimport * as i3 from \"ngx-bootstrap/dropdown\";\nimport * as i4 from \"@auth0/angular-jwt\";\nexport const jwtOptionsFactory = platformId => ({\n  tokenGetter: () => {\n    let token = null;\n\n    if (isPlatformBrowser(platformId)) {\n      token = localStorage.getItem('token');\n    }\n\n    return token;\n  },\n  whitelistedDomains: [Library.apiDomain]\n});\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [LocalStorageService, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpErrorInterceptor,\n      multi: true\n    }],\n    imports: [BrowserModule, HttpClientModule, CoreModule.forRoot(), FormsModule, SharedModule, AppRoutingModule, BrowserAnimationsModule, CollapseModule.forRoot(), BsDropdownModule.forRoot(), JwtModule.forRoot({\n      jwtOptionsProvider: {\n        provide: JWT_OPTIONS,\n        useFactory: jwtOptionsFactory,\n        deps: [PLATFORM_ID]\n      }\n    })]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}