{"ast":null,"code":"import { ValidationService } from 'src/app/core/services/validation.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction ControlMessagesComponent_em_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\n\nexport let ControlMessagesComponent = /*#__PURE__*/(() => {\n  class ControlMessagesComponent {\n    constructor() {}\n\n    get errorMessage() {\n      if (this.control) {\n        for (const propertyName in this.control.errors) {\n          if (this.control.errors.hasOwnProperty(propertyName) && this.control.touched) {\n            return ValidationService.getValidatorErrorMessage(propertyName, this.control.errors[propertyName]);\n          }\n        }\n      }\n\n      return null;\n    }\n\n  }\n\n  ControlMessagesComponent.ɵfac = function ControlMessagesComponent_Factory(t) {\n    return new (t || ControlMessagesComponent)();\n  };\n\n  ControlMessagesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ControlMessagesComponent,\n    selectors: [[\"app-control-messages\"]],\n    inputs: {\n      control: \"control\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"has-error mx-2\", 4, \"ngIf\"], [1, \"has-error\", \"mx-2\"]],\n    template: function ControlMessagesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ControlMessagesComponent_em_0_Template, 2, 1, \"em\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage !== null);\n      }\n    },\n    dependencies: [i1.NgIf],\n    styles: [\"em[_ngcontent-%COMP%]{color:#e82c0c;margin:6px 0}\"]\n  });\n  return ControlMessagesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}